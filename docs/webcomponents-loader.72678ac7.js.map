{"version":3,"file":"webcomponents-loader.72678ac7.js","sources":["../node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Basic flow of the loader process\n   *\n   * There are 4 flows the loader can take when booting up\n   *\n   * - Synchronous script, no polyfills needed\n   *   - wait for `DOMContentLoaded`\n   *   - fire WCR event, as there could not be any callbacks passed to `waitFor`\n   *\n   * - Synchronous script, polyfills needed\n   *   - document.write the polyfill bundle\n   *   - wait on the `load` event of the bundle to batch Custom Element upgrades\n   *   - wait for `DOMContentLoaded`\n   *   - run callbacks passed to `waitFor`\n   *   - fire WCR event\n   *\n   * - Asynchronous script, no polyfills needed\n   *   - wait for `DOMContentLoaded`\n   *   - run callbacks passed to `waitFor`\n   *   - fire WCR event\n   *\n   * - Asynchronous script, polyfills needed\n   *   - Append the polyfill bundle script\n   *   - wait for `load` event of the bundle\n   *   - batch Custom Element Upgrades\n   *   - run callbacks pass to `waitFor`\n   *   - fire WCR event\n   */\n\n  var polyfillsLoaded = false;\n  var whenLoadedFns = [];\n  var allowUpgrades = false;\n  var flushFn;\n\n  function fireEvent() {\n    window.WebComponents.ready = true;\n    document.dispatchEvent(\n      new CustomEvent('WebComponentsReady', {bubbles: true})\n    );\n  }\n\n  function batchCustomElements() {\n    if (window.customElements && customElements.polyfillWrapFlushCallback) {\n      customElements.polyfillWrapFlushCallback(function (flushCallback) {\n        flushFn = flushCallback;\n        if (allowUpgrades) {\n          flushFn();\n        }\n      });\n    }\n  }\n\n  function asyncReady() {\n    batchCustomElements();\n    ready();\n  }\n\n  function ready() {\n    // bootstrap <template> elements before custom elements\n    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\n      HTMLTemplateElement.bootstrap(window.document);\n    }\n    polyfillsLoaded = true;\n    runWhenLoadedFns().then(fireEvent);\n  }\n\n  function runWhenLoadedFns() {\n    allowUpgrades = false;\n    var fnsMap = whenLoadedFns.map(function (fn) {\n      return fn instanceof Function ? fn() : fn;\n    });\n    whenLoadedFns = [];\n    return Promise.all(fnsMap)\n      .then(function () {\n        allowUpgrades = true;\n        flushFn && flushFn();\n      })\n      .catch(function (err) {\n        console.error(err);\n      });\n  }\n\n  window.WebComponents = window.WebComponents || {};\n  window.WebComponents.ready = window.WebComponents.ready || false;\n  window.WebComponents.waitFor =\n    window.WebComponents.waitFor ||\n    function (waitFn) {\n      if (!waitFn) {\n        return;\n      }\n      whenLoadedFns.push(waitFn);\n      if (polyfillsLoaded) {\n        runWhenLoadedFns();\n      }\n    };\n  window.WebComponents._batchCustomElements = batchCustomElements;\n\n  var name = 'webcomponents-loader.js';\n  // Feature detect which polyfill needs to be imported.\n  var polyfills = [];\n  if (\n    !(\n      'attachShadow' in Element.prototype && 'getRootNode' in Element.prototype\n    ) ||\n    (window.ShadyDOM && window.ShadyDOM.force)\n  ) {\n    polyfills.push('sd');\n  }\n  if (!window.customElements || window.customElements.forcePolyfill) {\n    polyfills.push('ce');\n  }\n\n  var needsTemplate = (function () {\n    // no real <template> because no `content` property (IE and older browsers)\n    var t = document.createElement('template');\n    if (!('content' in t)) {\n      return true;\n    }\n    // broken doc fragment (older Edge)\n    if (!(t.content.cloneNode() instanceof DocumentFragment)) {\n      return true;\n    }\n    // broken <template> cloning (Edge up to at least version 17)\n    var t2 = document.createElement('template');\n    t2.content.appendChild(document.createElement('div'));\n    t.content.appendChild(t2);\n    var clone = t.cloneNode(true);\n    return (\n      clone.content.childNodes.length === 0 ||\n      clone.content.firstChild.content.childNodes.length === 0\n    );\n  })();\n\n  // NOTE: any browser that does not have template or ES6 features\n  // must load the full suite of polyfills.\n  if (\n    !window.Promise ||\n    !Array.from ||\n    !window.URL ||\n    !window.Symbol ||\n    needsTemplate\n  ) {\n    polyfills = ['sd-ce-pf'];\n  }\n\n  if (polyfills.length) {\n    // When the Trusted Types API is available, `policy` is a\n    // `TrustedTypePolicy` with functions for creating trusted HTML, scripts,\n    // and script URLs. This policy is used below to (a) approve the bundle URL\n    // string created by the loader that is assigned to a `<script>`'s `src`\n    // attribute, (b) approve a constant script string that is assigned to that\n    // `<script>'s `onload` attribute, and (c) approve the string of HTML that\n    // the loader reads from that `<script>`'s `outerHTML`.\n    //\n    // If the Trusted Types API is not available, the returned object exposes a\n    // similar interface to a `TrustedTypePolicy`, but all of its functions are\n    // the identity function.\n    var policy = (function () {\n      var identity = function (x) {\n        return x;\n      };\n      var policyOptions = {\n        createHTML: identity,\n        createScript: identity,\n        createScriptURL: identity,\n      };\n      var policy =\n        window.trustedTypes &&\n        window.trustedTypes.createPolicy('webcomponents-loader', policyOptions);\n      return policy || policyOptions;\n    })();\n\n    var url;\n    var polyfillFile = 'bundles/webcomponents-' + polyfills.join('-') + '.js';\n\n    // Load it from the right place.\n    if (window.WebComponents.root) {\n      url = window.WebComponents.root + polyfillFile;\n      if (\n        window.trustedTypes &&\n        window.trustedTypes.isScriptURL(window.WebComponents.root)\n      ) {\n        url = policy.createScriptURL(url);\n      }\n    } else {\n      var script = document.querySelector('script[src*=\"' + name + '\"]');\n      // Load it from the right place.\n      url = policy.createScriptURL(script.src.replace(name, polyfillFile));\n    }\n\n    var newScript = document.createElement('script');\n    newScript.src = url;\n    // if readyState is 'loading', this script is synchronous\n    if (document.readyState === 'loading') {\n      // make sure custom elements are batched whenever parser gets to the injected script\n      newScript.setAttribute(\n        'onload',\n        policy.createScript('window.WebComponents._batchCustomElements()')\n      );\n      document.write(policy.createHTML(newScript.outerHTML));\n      document.addEventListener('DOMContentLoaded', ready);\n    } else {\n      newScript.addEventListener('load', function () {\n        asyncReady();\n      });\n      newScript.addEventListener('error', function () {\n        throw new Error('Could not load polyfill bundle' + url);\n      });\n      document.head.appendChild(newScript);\n    }\n  } else {\n    // if readyState is 'complete', script is loaded imperatively on a spec-compliant browser, so just fire WCR\n    if (document.readyState === 'complete') {\n      polyfillsLoaded = true;\n      fireEvent();\n    } else {\n      // this script may come between DCL and load, so listen for both, and cancel load listener if DCL fires\n      window.addEventListener('load', ready);\n      window.addEventListener('DOMContentLoaded', function () {\n        window.removeEventListener('load', ready);\n        ready();\n      });\n    }\n  }\n})();\n"],"names":["flushFn","polyfillsLoaded","whenLoadedFns","allowUpgrades","fireEvent","window","WebComponents","ready","document","dispatchEvent","CustomEvent","bubbles","batchCustomElements","customElements","polyfillWrapFlushCallback","flushCallback","HTMLTemplateElement","bootstrap","runWhenLoadedFns","then","fnsMap","map","fn","Function","Promise","all","catch","err","console","error","waitFor","waitFn","push","_batchCustomElements","name","polyfills","Element","prototype","ShadyDOM","force","forcePolyfill","identity","policyOptions","needsTemplate","t","createElement","content","cloneNode","DocumentFragment","t2","appendChild","clone","childNodes","length","firstChild","Array","from","URL","Symbol","url","policy","createHTML","x","createScript","createScriptURL","trustedTypes","createPolicy","polyfillFile","join","root","isScriptURL","script","querySelector","src","replace","newScript","readyState","setAttribute","write","outerHTML","addEventListener","Error","head","removeEventListener"],"mappings":"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"}